import numpy as np
#koords = [x,y] +-
"""
def lighcurve(koords,Scw,filename):
    n = 0
    N = 10
  #  findlist = ["x/y/r:","Effective Flux Collection Area"]
    data = np.array([])
    with open(filename) as f:
        lines = f.readlines()
    for i in range(len(lines)):
        if "BegiN {}".format(Scw) in lines[i]:
            start = i
            if "EnD {}".format(Scw) in lines[i]:
                end = i
        else:
            print("{} not found".format(Scw))
    for i in range([start],end):
        print(lines[i])
        
            SCW = [None] * N
            M = 0
            while len(lines[m]) > 1:
                if  "x/y/r:"  in lines[m]:
                    temp = np.zeros(4)
                    xynumbs = re.findall(r"-?\d+\.?\d*", lines[m])
                    temp[0] = xynumbs[0]
                    temp[1] = xynumbs[1]
                    
                if  "Effective Flux Collection Area"  in lines[m]:
                    #print(lines[m])
                    xynumbs2 = re.findall(r"-?\d+\.?\d*", lines[m])
                    temp[2] = xynumbs2[len(xynumbs2)-2]
                    temp[3] = xynumbs2[len(xynumbs2)-1]
                    data = np.vstack((data,temp))
                m += 1
            M += 1
            # n=n+1
        else:
            print("{} not found".format(Scw))
    
"""

s2 = "43 40 44 40 45 47 46 33 47 44 48 39 49 45 50 44 51 38 52 40 53 44 54 39 55 42 56 43 57 36 58 41 59 50 60 44 61 33 62 50 63 33 64 40 65 43 66 38 67 31 68 39 69 40 70 37 71 39 72 45 73 46 74 52 75 40 76 43 77 48 78 48 79 39 80 41 81 41 82 32 83 27 84 39 85 43 86 42 87 31 88 44 89 44 90 39 91 46 92 33 93 45 94 35 95 40 96 41 97 50 98 41 99 41 100 34 101 46 102 43 103 38 104 50 105 47 106 40 107 45 108 41 109 51 110 42 111 47 112 46 113 34 114 38 115 45 116 47 117 40 118 40 119 41 120 39 121 36 122 36 123 35 124 44 125 39 126 44 127 40 128 43 129 39 130 39 131 40 132 45 133 37 134 44 135 43 136 46 137 34 138 44 139 42 140 48 141 43 142 48 143 28 144 45 145 31 146 44 147 35 148 46 149 46 150 38 151 33 152 39 153 31 154 46 155 29 156 48 157 46 158 61 159 37 160 45 161 31 162 34 163 25 164 43 165 34 166 39 167 47 168 34 169 51 170 48 171 53 172 21 173 35 174 51 175 53 176 32 177 39 178 32 179 37 180 37 181 74 182 69 183 47 184 37 185 21 186 32 187 74 188 37 189 26 190 47 191 21 192 63 193 58 194 26 195 63 196 42 197 59 198 63 199 21 200 31 201 21 202 42 203 31 204 42 205 31 206 42 207 63 208 21 209 52 210 84 211 63 212 52 213 73 214 63 215 31 216 73 217 63 218 42 219 63 220 0 221 42 222 63 223 42 224 52 225 21 226 21 227 42 228 84 229 21 230 52 231 73 232 31 233 21 234 31 235 94 236 42 237 21 238 31 239 31 240 10 241 31 242 52 243 0 244 42 245 42 246 31 247 31 248 0 249 31 250 42 251 0 252 0 253 0 254 42 255 63 256 84 257 10 258 52 259 10 260 52 261 10 262 52 263 42 264 31 265 21 266 10 267 10 268 10 269 21 270 21 271 0 272 10 273 52 274 52 275 52 276 31 277 10 278 52 279 10 280 52 281 21 282 21 283 52 284 21 285 63 286 31 287 52 288 52 289 52 290 21 291 52 292 105 293 52 294 31 295 63 296 21 297 84 298 63 299 42 300 31 301 31 302 0 303 10 304 31 305 21 306 21 307 73 308 0 309 21 310 42 311 31 312 10 313 52 314 84 315 84 316 31 317 21 318 0 319 42 320 52 321 21 322 21 323 52 324 42 325 52 326 10 327 57 328 16 329 67 330 32 331 35 332 35 333 32 334 24 335 45 336 13 337 47 338 45 339 48 340 20 341 44 342 27 343 30 344 45 345 43 346 38 347 41 348 40 349 44 350 33 351 35 352 24 353 35 354 32 355 30 356 42 357 36 358 47 359 34 360 35 361 34 362 24 363 46 364 35 365 37 366 39 367 62 368 46 369 35 370 32 371 45 372 38 373 43 374 23 375 37 376 53 377 43 378 37 379 38 380 40 381 31 382 49 383 33 384 38 385 43 386 27 387 38 388 32 389 57 390 40 391 43 392 42 393 39 394 34 395 27 396 37 397 41 398 23 399 46 400 39 401 45 402 34 403 24 404 36 405 38 406 37 407 40 408 36 409 49 410 36 411 34 412 36 413 36 414 48 415 35 416 36 417 33 418 41 419 43 420 34 421 28 422 36 423 33 424 30 425 35 426 28 427 41 428 32 429 32 430 37 431 38 432 32 433 47 434 40 435 42 436 40 437 27 438 41 439 39 440 46 441 38 442 30 443 41 444 29 445 34 446 36 447 35 448 41 449 32 450 42 451 43 452 30 453 30 454 41 455 34 456 23 457 36 458 36 459 36 460 43 461 42 462 37 463 41 464 40 465 34 466 39 468 40"
s = "43 80 44 80 45 84 46 70 47 82 48 83 49 85 50 83 51 78 52 81 53 92 54 86 55 82 56 75 57 82 58 78 59 92 60 91 61 67 62 78 63 69 64 81 65 74 66 86 67 72 68 77 69 83 70 77 71 77 72 80 73 81 74 84 75 78 76 91 77 86 78 76 79 86 80 74 81 80 82 68 83 68 84 78 85 85 86 72 87 68 88 91 89 85 90 84 91 93 92 74 93 91 94 66 95 83 96 76 97 92 98 76 99 75 100 76 101 87 102 78 103 94 104 89 105 77 106 84 107 77 108 84 109 84 110 88 111 83 112 86 113 66 114 74 115 81 116 88 117 80 118 84 119 68 120 84 121 70 122 74 123 78 124 85 125 71 126 82 127 73 128 75 129 77 130 86 131 88 132 88 133 79 134 87 135 74 136 93 137 64 138 82 139 90 140 99 141 84 142 82 143 61 144 85 145 73 146 83 147 64 148 92 149 70 150 89 151 72 152 77 153 70 154 99 155 61 156 71 157 83 158 121 159 61 160 82 161 66 162 64 163 56 164 87 165 55 166 88 167 95 168 76 169 97 170 78 171 82 172 68 173 67 174 50 175 88 176 84 177 71 178 87 179 91 180 117 181 179 182 111 183 104 184 126 185 78 186 73 187 107 188 75 189 61 190 93 191 70 192 116 193 90 194 83 195 104 196 39 197 121 198 132 199 69 200 63 201 67 202 84 203 67 204 88 205 51 206 52 207 70 208 76 209 85 210 199 211 129 212 128 213 87 214 138 215 91 216 156 217 61 218 104 219 107 220 55 221 121 222 187 223 79 224 75 225 65 226 33 227 113 228 115 229 88 230 68 231 106 232 95 233 9 234 90 235 126 236 63 237 29 238 47 239 74 240 41 241 104 242 46 243 44 244 84 245 69 246 73 247 57 248 45 249 110 250 102 251 48 252 25 253 45 254 70 255 100 256 112 257 63 258 65 259 55 260 116 261 62 262 54 263 59 264 34 265 86 266 64 267 75 268 96 269 65 270 72 271 32 272 63 273 55 274 94 275 77 276 121 277 42 278 113 279 88 280 134 281 46 282 69 283 78 284 68 285 119 286 114 287 119 288 125 289 92 290 78 291 9 292 210 293 134 294 91 295 154 296 72 297 204 298 64 299 135 300 63 301 122 302 56 303 49 304 127 305 67 306 65 307 154 308 24 309 84 310 116 311 94 312 63 313 117 314 76 315 236 316 68 317 61 318 54 319 83 320 59 321 48 322 89 323 121 324 89 325 123 326 78 327 92 328 49 329 134 330 75 331 79 332 66 333 36 334 53 335 78 336 55 337 82 338 86 339 97 340 72 341 82 342 82 343 89 344 84 345 75 346 69 347 81 348 96 349 76 350 62 351 77 352 79 353 68 354 70 355 70 356 75 357 81 358 72 359 87 360 78 361 70 362 64 363 75 364 73 365 88 366 74 367 106 368 94 369 80 370 70 371 85 372 66 373 87 374 68 375 76 376 99 377 89 378 74 379 81 380 88 381 72 382 87 383 67 384 71 385 94 386 68 387 66 388 71 389 109 390 83 391 82 392 85 393 87 394 79 395 69 396 74 397 74 398 67 399 76 400 91 401 79 402 71 403 59 404 88 405 78 406 92 407 92 408 74 409 86 410 79 411 75 412 76 413 77 414 95 415 60 416 81 417 68 418 81 419 88 420 76 421 70 422 88 423 72 424 75 425 79 426 60 427 81 428 70 429 67 430 81 431 80 432 78 433 73 434 67 435 87 436 83 437 77 438 75 439 71 440 81 441 81 442 73 443 79 444 85 445 71 446 89 447 81 448 84 449 76 450 79 451 76 452 67 453 78 454 75 455 65 456 54 457 76 458 74 459 72 460 92 461 89 462 80 463 87 464 77 465 65 466 107 468 80"
ssplit = (s.split(" "))
intlist =[int(i) for i in ssplit]
array = np.asarray(intlist)
y = array[1::2]
x = array[::2]
import matplotlib.pyplot as plt
plt.plot(y, 'r')
plt.axis([0, max(x)*1.02, 0, max(y)*1.05])
plt.show()
